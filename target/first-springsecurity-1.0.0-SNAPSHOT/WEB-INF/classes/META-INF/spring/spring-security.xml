<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
    ">

    <sec:http pattern="/resources/**" security="none"/>
    <sec:http>
        <!-- (1)
        <sec:form-login>タグでログインフォームに関する設定を行う。
        <sec:form-login>タグには、login-page属性にログインフォームを表示するためのURL
        authentication-failure-url属性に認証エラー時に遷移するページを表示するためのURLを設定する。
        -->
        <sec:form-login
                login-page="/login/loginForm"
                authentication-failure-url="/login/loginForm?error=true" />
        <!-- (2)
        <sec:logout>タグでログアウトに関する設定を行う。
        <sec:logout>タグには、
        logout-success-url属性にログアウト後に遷移するページを表示するためのURL(本チュートリアルではウェルカムページを表示するためのURL)
        delete-cookies属性にログアウト時に削除するCookie名(本チュートリアルではセッションIDのCookie名)を設定する。
        -->
        <sec:logout
                logout-success-url="/"
                delete-cookies="JSESSIONID" />
        <sec:access-denied-handler ref="accessDeniedHandler"/>
        <sec:custom-filter ref="userIdMDCPutFilter" after="ANONYMOUS_FILTER"/>
        <sec:session-management />
        <!-- (3)
        <sec:intercept-url>タグを使用してURL毎の認可設定を行う。
        <sec:intercept-url>タグには、
        ログインフォームを表示するためのURLには、全てのユーザーのアクセスを許可するpermitAll
        上記以外のURLには、認証済みユーザーのみアクセスを許可するisAuthenticated()を設定する。
        ただし、/resources/配下のURLについては、Spring Securityによる認証・認可処理を行わない設定(<sec:http pattern="/resources/**" security="none"/>)
        が行われているため、全てのユーザーがアクセスすることができる。
        -->
        <sec:intercept-url pattern="/login/**" access="permitAll" />
        <sec:intercept-url pattern="/**" access="isAuthenticated()" />
    </sec:http>

    <sec:authentication-manager>
        <!-- com.example.security.domain.service.userdetails.SampleUserDetailsService
          is scanned by component scan with @Service -->
        <!-- (4)
        <sec:authentication-provider>タグを使用して、認証処理を行うorg.springframework.security.authentication.AuthenticationProviderの設定を行う。
        デフォルトでは、UserDetailsServiceを使用してUserDetailsを取得し、そのUserDetailsが持つハッシュ化済みパスワードと、
        ログインフォームで指定されたパスワードを比較してユーザー認証を行うクラス(org.springframework.security.authentication.dao.DaoAuthenticationProvider)が使用される。
        user-service-ref属性にUserDetailsServiceインタフェースを実装しているコンポーネントのbean名を指定する。
        本チュートリアルでは、ドメイン層に作成したSampleUserDetailsServiceクラスを設定する。
        -->
        <sec:authentication-provider user-service-ref="sampleUserDetailsService" />
    </sec:authentication-manager>

    <!-- CSRF Protection -->
    <bean id="accessDeniedHandler"
          class="org.springframework.security.web.access.DelegatingAccessDeniedHandler">
        <constructor-arg index="0">
            <map>
                <entry
                        key="org.springframework.security.web.csrf.InvalidCsrfTokenException">
                    <bean
                            class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                        <property name="errorPage"
                                  value="/WEB-INF/views/common/error/invalidCsrfTokenError.jsp" />
                    </bean>
                </entry>
                <entry
                        key="org.springframework.security.web.csrf.MissingCsrfTokenException">
                    <bean
                            class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                        <property name="errorPage"
                                  value="/WEB-INF/views/common/error/missingCsrfTokenError.jsp" />
                    </bean>
                </entry>
            </map>
        </constructor-arg>
        <constructor-arg index="1">
            <bean
                    class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                <property name="errorPage"
                          value="/WEB-INF/views/common/error/accessDeniedError.jsp" />
            </bean>
        </constructor-arg>
    </bean>

    <!-- Put UserID into MDC -->
    <bean id="userIdMDCPutFilter" class="org.terasoluna.gfw.security.web.logging.UserIdMDCPutFilter">
    </bean>

</beans>